(this["webpackJsonppath-finding-visualizer"]=this["webpackJsonppath-finding-visualizer"]||[]).push([[0],[,,,,,,,,,,function(t,e,n){t.exports=n(23)},,,,,function(t,e,n){},function(t,e,n){},function(t,e,n){},,function(t,e,n){},function(t,e,n){},function(t,e,n){},function(t,e,n){},function(t,e,n){"use strict";n.r(e);var a,i,r=n(0),o=n.n(r),l=n(8),s=n.n(l),c=(n(15),n(16),n(9),n(2)),u=n(3),h=n(5),d=n(4),f=n(6),m=(n(17),function(t){function e(){return Object(c.a)(this,e),Object(h.a)(this,Object(d.a)(e).apply(this,arguments))}return Object(f.a)(e,t),Object(u.a)(e,[{key:"render",value:function(){var t=this.props,e=t.col,n=t.isFinish,a=t.isStart,i=t.isWall,r=t.onMouseDown,l=t.onMouseEnter,s=t.onMouseUp,c=t.row,u=n?"node-finish":a?"node-start":i?"node-wall":"";return o.a.createElement("div",{id:"node-".concat(c,"-").concat(e),className:"node ".concat(u),onMouseDown:function(){return r(c,e)},onMouseEnter:function(){return l(c,e)},onMouseUp:function(){return s()}})}}]),e}(r.Component)),p=n(1),g=n.n(p);function y(t,e,n){if(!e||!n||e===n)return!1;a=new g.a((function(t,e){return t.distance-e.distance}));var i=[];for(e.distance=0,function(t){var e=!0,n=!1,i=void 0;try{for(var r,o=t[Symbol.iterator]();!(e=(r=o.next()).done);e=!0){var l=r.value,s=!0,c=!1,u=void 0;try{for(var h,d=l[Symbol.iterator]();!(s=(h=d.next()).done);s=!0){var f=h.value;a.push(f)}}catch(m){c=!0,u=m}finally{try{s||null==d.return||d.return()}finally{if(c)throw u}}}}catch(m){n=!0,i=m}finally{try{e||null==o.return||o.return()}finally{if(n)throw i}}}(t),a.heapify();0!==a.length;){var r=a.pop();if(!r.isWall){if(r.distance===1/0)return i;if(r.visited=!0,i.push(r),r===n)return i;v(r,t)}}}function v(t,e){var n=function(t,e){return function(t,e){var n=[],a=t.col,i=t.row;i>0&&n.push(e[i-1][a]);i<e.length-1&&n.push(e[i+1][a]);a>0&&n.push(e[i][a-1]);a<e[0].length-1&&n.push(e[i][a+1]);return n}(t,e).filter((function(t){return!t.visited}))}(t,e),i=!0,r=!1,o=void 0;try{for(var l,s=n[Symbol.iterator]();!(i=(l=s.next()).done);i=!0){var c=l.value;c.distance>t.distance+1&&(c.distance=t.distance+1,c.previousNode=t,a.updateItem(c))}}catch(u){r=!0,o=u}finally{try{i||null==s.return||s.return()}finally{if(r)throw o}}}function b(t){for(var e=[],n=t;null!==n;)e.unshift(n),n=n.previousNode;return e}function w(t,e){if(!function(t,e){if(t===[])return!1;var n=!0,a=!1,i=void 0;try{for(var r,o=t[Symbol.iterator]();!(n=(r=o.next()).done);n=!0){var l=r.value;if(l.row===e.row&&l.col===e.col)return!0}}catch(s){a=!0,i=s}finally{try{n||null==o.return||o.return()}finally{if(a)throw i}}return!1}(e,t))return[];for(var n=[],a=t;null!==a;)n.unshift(a),a=a.previousNode;return n}function k(t,e){var n=[],a=t.col,i=t.row;return i>0&&n.push(e[i-1][a]),i<e.length-1&&n.push(e[i+1][a]),a>0&&n.push(e[i][a-1]),a<e[0].length-1&&n.push(e[i][a+1]),n}function x(t,e){return k(t,e).filter((function(t){return!t.visited}))}function E(){var t=[],e=0;this.getLength=function(){return t.length-e},this.isEmpty=function(){return 0===t.length},this.enqueue=function(e){t.push(e)},this.dequeue=function(){if(0!==t.length){var n=t[e];return 2*++e>=t.length&&(t=t.slice(e),e=0),n}},this.peek=function(){return t.length>0?t[e]:void 0}}function C(t,e,n){if(!e||!n||e===n)return!1;var a=[];for(i=new g.a((function(t,e){return t.fCost-e.fCost})),function(t){var e=!0,n=!1,a=void 0;try{for(var r,o=t[Symbol.iterator]();!(e=(r=o.next()).done);e=!0){var l=r.value,s=!0,c=!1,u=void 0;try{for(var h,d=l[Symbol.iterator]();!(s=(h=d.next()).done);s=!0){var f=h.value;f.fCost=1/0,f.gCost=1/0,f.hCost=1/0,i.push(f)}}catch(m){c=!0,u=m}finally{try{s||null==d.return||d.return()}finally{if(c)throw u}}}}catch(m){n=!0,a=m}finally{try{e||null==o.return||o.return()}finally{if(n)throw a}}}(t),e.fCost=0,e.gCost=0,e.hCost=0,i.heapify();0!==i.length;){var r=i.pop();if("undefined"===typeof r||r.fCost===1/0)return a;if(!r.isWall){if(r.visited=!0,a.push(r),r===n)return a;var o=x(r,t),l=!0,s=!1,c=void 0;try{for(var u,h=o[Symbol.iterator]();!(l=(u=h.next()).done);l=!0){var d=u.value;if(!d.isWall){var f=I(d.col,n.col,d.row,n.row);r.gCost+1<d.gCost&&(d.hCost=f,d.gCost=r.gCost+1,d.fCost=d.hCost+d.gCost,d.previousNode=r,i.updateItem(d))}}}catch(m){s=!0,c=m}finally{try{l||null==h.return||h.return()}finally{if(s)throw c}}}}return a}function N(t,e,n,a){var i=Math.abs(t-e),r=Math.abs(n-a),o=Math.pow(i,2),l=Math.pow(r,2);return Math.pow(o+l,.5)}function I(t,e,n,a){return Math.abs(t-e)+Math.abs(n-a)}var M,S,B,A=[],T=0;function W(t,e,n){return A=[],function t(e,n,a){if(!n||!a||n===a)return!1;if(n.isWall||n.visited)return;if(n.visited=!0,A.push(n),n===a)return T=1,A;var i=x(n,e),r=!0,o=!1,l=void 0;try{for(var s,c=i[Symbol.iterator]();!(r=(s=c.next()).done);r=!0){var u=s.value;if(!u.isWall&&!u.visited){if(u.previousNode=n,1===T)return A;if(t(e,u,a),1===T)return A}}}catch(h){o=!0,l=h}finally{try{r||null==c.return||c.return()}finally{if(o)throw l}}return A}(t,e,n)}function F(t,e,n){if(!e||!n||e===n)return!1;var a=[];for(M=new g.a((function(t,e){return t.fCost-e.fCost})),function(t){var e=!0,n=!1,a=void 0;try{for(var i,r=t[Symbol.iterator]();!(e=(i=r.next()).done);e=!0){var o=i.value,l=!0,s=!1,c=void 0;try{for(var u,h=o[Symbol.iterator]();!(l=(u=h.next()).done);l=!0){var d=u.value;d.fCost=1/0,d.hCost=1/0,M.push(d)}}catch(f){s=!0,c=f}finally{try{l||null==h.return||h.return()}finally{if(s)throw c}}}}catch(f){n=!0,a=f}finally{try{e||null==r.return||r.return()}finally{if(n)throw a}}}(t),e.fCost=0,M.updateItem(e),M.heapify();M.size()>0;){var i=M.pop();if("undefined"===typeof i)return a;if(i.fCost===1/0)return a;if(!i.isWall){if(i.visited=!0,a.push(i),i===n)return a;var r=x(i,t),o=!0,l=!1,s=void 0;try{for(var c,u=r[Symbol.iterator]();!(o=(c=u.next()).done);o=!0){var h=c.value;if(!h.isWall){var d=N(h.col,n.col,h.row,n.row);h.fCost>d&&(h.fCost=d,h.previousNode=i,M.updateItem(h))}}}catch(f){l=!0,s=f}finally{try{o||null==u.return||u.return()}finally{if(l)throw s}}}}return a}function H(t){var e=!0,n=!1,a=void 0;try{for(var i,r=t[Symbol.iterator]();!(e=(i=r.next()).done);e=!0){var o=i.value;if(o.visitedByStart&&o.visitedByFinish&&!o.isWall)return S=o.row,B=o.col,!0}}catch(l){n=!0,a=l}finally{try{e||null==r.return||r.return()}finally{if(n)throw a}}return!1}function z(t,e){return k(t,e).filter((function(t){return t.visitedByFinish||!t.visited}))}function L(t,e){return k(t,e).filter((function(t){return t.visitedByStart||!t.visited}))}function O(){var t=[],e=0;this.getLength=function(){return t.length-e},this.isEmpty=function(){return 0===t.length},this.enqueue=function(e){t.push(e)},this.dequeue=function(){if(0!==t.length){var n=t[e];return 2*++e>=t.length&&(t=t.slice(e),e=0),n}},this.peek=function(){return t.length>0?t[e]:void 0}}function D(t,e){return Math.floor(Math.random()*(e-t+1))+t}var R=[],j="";function G(t,e,n,a,i,r,o){return R=[],j=o,function t(e,n,a,i,r,o){if(a<n||r<i)return;if("HORIZONTAL"===o){for(var l=[],s=n;s<=a;s+=2)l.push(s);for(var c=[],u=i-1;u<=r+1;u+=2)c.push(u);var h=Math.floor(Math.random()*l.length),d=Math.floor(Math.random()*c.length),f=l[h],m=c[d],p=e[f],g=!0,y=!1,v=void 0;try{for(var b,w=p[Symbol.iterator]();!(g=(b=w.next()).done);g=!0){var k=b.value;k.row===f&&!k.isStart&&!k.isFinish&&k.col!==m&&!k.visited&&k.col>=i-1&&k.col<=r+1&&(console.log(k),k.isWall=!0,k.visited=!0,R.push(k))}}catch(W){y=!0,v=W}finally{try{g||null==w.return||w.return()}finally{if(y)throw v}}t(e,n,f-2,i,r,f-2-n>r-i?P(o,o,"VERTICAL"):P("VERTICAL","VERTICAL","VERTICAL")),t(e,f+2,a,i,r,a-(f+2)>r-i?P(o,o,"VERTICAL"):P("VERTICAL","VERTICAL","VERTICAL"))}else{for(var x=[],E=i;E<=r;E+=2)x.push(E);for(var C=[],N=n-1;N<=a+1;N+=2)C.push(N);for(var I=Math.floor(Math.random()*x.length),M=Math.floor(Math.random()*C.length),S=x[I],B=C[M],A=n-1;A<=a+1;A++){var T=e[A][S];!T.isStart&&!T.isFinish&&T.col===S&&!T.visited&&T.row>=n-1&&T.row<=a+1&&T.row!==B&&(T.visited=!0,T.isWall=!0,R.push(T))}t(e,n,a,i,S-2,P(a-n>S-2-i?"HORIZONTAL":o,"HORIZONTAL",o)),t(e,n,a,S+2,r,a-n>r-(S+2)?P("HORIZONTAL","HORIZONTAL","HORIZONTAL"):P(o,"HORIZONTAL",o))}}(t,e,n,a,i,r),R}function P(t,e,n){return"regularMaze"===j?t:"horizontalMaze"===j?e:"verticalMaze"===j?n:void 0}n(19),n(20),n(21),n(22);var q=10,V=15,Z=10,U=35,J=!1,Y=!1,X=!1,$=!1,_=0,K=function(t){function e(){var t;return Object(c.a)(this,e),(t=Object(h.a)(this,Object(d.a)(e).call(this))).state={grid:[]},t}return Object(f.a)(e,t),Object(u.a)(e,[{key:"componentDidMount",value:function(){var t=function(){for(var t=[],e=0;e<20;e++){for(var n=[],a=0;a<50;a++)n.push(Q(a,e));t.push(n)}return t}();this.setState({grid:t}),window.onload=this.openHelpMenu()}},{key:"handleMouseDown",value:function(t,e){if(!$){var n=this.state.grid;J=!0;var a=n[t][e];a.isStart?Y=!0:a.isFinish?X=!0:(a.isWall=!a.isWall,!a.isWall||a.isStart||a.isFinish?a.isStart||a.isFinish||(document.getElementById("node-".concat(a.row,"-").concat(a.col)).className="node"):document.getElementById("node-".concat(a.row,"-").concat(a.col)).className="node node-wall")}}},{key:"handleMouseEnter",value:function(t,e){if(J&&!$){document.getElementById("grid").onmouseleave=function(){console.log("mouse exited"),Y=!1,X=!1,J=!1};var n=this.state.grid,a=n[t][e];if(Y){if(a.isFinish||a.isWall)return;var i=n[q][V];return document.getElementById("node-".concat(q,"-").concat(V)).className="node",i.isStart=!1,i.isWall=!1,a.isStart=!0,a.isWall=!1,q=t,V=e,void(document.getElementById("node-".concat(t,"-").concat(e)).className="node node-start")}if(X){if(a.isStart||a.isWall)return;var r=n[Z][U];return document.getElementById("node-".concat(r.row,"-").concat(r.col)).className="node",r.isFinish=!1,r.isWall=!1,a.isFinish=!0,a.isWall=!1,Z=t,U=e,void(document.getElementById("node-".concat(a.row,"-").concat(a.col)).className="node node-finish")}a.isStart||a.isFinish||(a.isWall=!a.isWall,!a.isWall||a.isStart||a.isFinish?a.isStart||a.isFinish||(document.getElementById("node-".concat(a.row,"-").concat(a.col)).className="node"):document.getElementById("node-".concat(a.row,"-").concat(a.col)).className="node node-wall")}}},{key:"handleMouseUp",value:function(){$||(Y=!1,X=!1,J=!1)}},{key:"animateAlgorithm",value:function(t,e){for(var n=this,a=function(a){if(a===t.length)return setTimeout((function(){n.animateShortestPath(e)}),10*a),{v:void 0};setTimeout((function(){var e=t[a];document.getElementById("node-".concat(e.row,"-").concat(e.col)).className="node node-visited"}),10*a)},i=0;i<=t.length;i++){var r=a(i);if("object"===typeof r)return r.v}}},{key:"animateShortestPath",value:function(t){if(null==t||t.length<=1)return document.getElementById("node-".concat(Z,"-").concat(U)).className="node node-visited-invalid-finish",void($=!1);for(var e=function(e){setTimeout((function(){var n=t[e];"undefined"!==typeof n?(n.isFinish?document.getElementById("node-".concat(n.row,"-").concat(n.col)).className="node node-visited-finish":n.isStart?document.getElementById("node-".concat(q,"-").concat(V)).className="node node-visited-start":document.getElementById("node-".concat(n.row,"-").concat(n.col)).className="node node-shortest-path",e===t.length-1&&($=!1)):$=!1}),50*e)},n=0;n<t.length;n++)e(n)}},{key:"visualizeAlgorithm",value:function(t){var e,n=this.state.grid,a=n[q][V],i=n[Z][U],r=null;switch(t){case 0:r=y(n,a,i);break;case 1:r=function(t,e,n){if(!e||!n||e===n)return!1;var a=[],i=new E;for(e.distance=0,i.enqueue(e);0!==i.length;){var r=i.dequeue();if("undefined"===typeof r)return a;if(!r.isWall){if(r.distance=0,r.visited=!0,a.push(r),r===n)return a;var o=x(r,t),l=!0,s=!1,c=void 0;try{for(var u,h=o[Symbol.iterator]();!(l=(u=h.next()).done);l=!0){var d=u.value;d.isWall||(i.enqueue(d),d.visited=!0,d.previousNode=r,d.distance=0)}}catch(f){s=!0,c=f}finally{try{l||null==h.return||h.return()}finally{if(s)throw c}}}}}(n,a,i);break;case 2:r=W(n,a,i);break;case 3:r=C(n,a,i);break;case 4:r=F(n,a,i);break;case 5:r=function(t,e,n){if(S=-1,B=-1,!e||!n||e===n)return!1;var a=[],i=new O,r=new O;for(i.enqueue(e),r.enqueue(n);0!==i.length&&0!==r.length;){var o=i.dequeue(),l=r.dequeue();if("undefined"===typeof o)return a;if("undefined"===typeof l)return a;if(o.visited=!0,l.visited=!0,a.push(o),a.push(l),H(a))return a;var s=z(o,t),c=L(l,t),u=!0,h=!1,d=void 0;try{for(var f,m=s[Symbol.iterator]();!(u=(f=m.next()).done);u=!0){var p=f.value;p.isWall||(p.visited=!0,p.visitedByStart=!0,p.previousNode=o,i.enqueue(p))}}catch(x){h=!0,d=x}finally{try{u||null==m.return||m.return()}finally{if(h)throw d}}var g=!0,y=!1,v=void 0;try{for(var b,w=c[Symbol.iterator]();!(g=(b=w.next()).done);g=!0){var k=b.value;k.isWall||(k.visited=!0,k.visitedByFinish=!0,k.previousNode=l,r.enqueue(k))}}catch(x){y=!0,v=x}finally{try{g||null==w.return||w.return()}finally{if(y)throw v}}}}(n,a,i),e=this.biDirectionalHelper(n,r);break;default:r=C(n,a,i)}5!==t&&(e=b(i)),!1!==r&&(console.log(n),this.animateAlgorithm(r,e))}},{key:"biDirectionalHelper",value:function(t,e){var n=[];if("undefined"!==typeof B&&"undefined"!==typeof S&&-1!==S&&-1!==B){var a=b(t[S][B]),i=this.findSecondBranch(t,a,e);n=a.concat(i)}return n}},{key:"findSecondBranch",value:function(t,e,n){var a=t[q][V],i=t[Z][U],r=null,o=!0;B+1>=50?o=!1:r=t[S][B+1];var l=null,s=!0;S+1>=20?s=!1:l=t[S+1][B];var c=null,u=!0;B-1<0?u=!1:c=t[S][B-1];var h=null,d=!0;S-1<0?d=!1:h=t[S-1][B];var f=[];o&&(f=w(r,n));var m=[];s&&(m=w(l,n));var p=[];u&&(p=w(c,n));var g=[];if(d&&(g=w(h,n)),this.arrayContainsGivenNode(e,a)){if(o&&this.arrayContainsGivenNode(f,i))return f;if(s&&this.arrayContainsGivenNode(m,i))return m;if(u&&this.arrayContainsGivenNode(p,i))return p;if(d&&this.arrayContainsGivenNode(g,i))return g}else{if(this.arrayContainsGivenNode(o&&f,a))return f;if(this.arrayContainsGivenNode(s&&m,a))return m;if(u&&this.arrayContainsGivenNode(p,a))return p;if(d&&this.arrayContainsGivenNode(g,a))return g}}},{key:"arrayContainsGivenNode",value:function(t,e){if(t===[])return!1;var n=!0,a=!1,i=void 0;try{for(var r,o=t[Symbol.iterator]();!(n=(r=o.next()).done);n=!0){var l=r.value;if(l.row===e.row&&l.col===e.col)return!0}}catch(s){a=!0,i=s}finally{try{n||null==o.return||o.return()}finally{if(a)throw i}}return!1}},{key:"render",value:function(){var t=this,e=this.state,n=e.grid,a=e.mouseIsPressed;return o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"title-container"},o.a.createElement("div",{className:"title",onClick:function(){return t.refreshPage()}},"Pathfinding Visualizer"),o.a.createElement("div",{className:"title-button-row"},o.a.createElement("button",{onClick:function(){return t.visualizeWalls(1)}}," ","Recursive Division"," "),o.a.createElement("button",{onClick:function(){return t.visualizeWalls(0)}}," ","Random Maze"," "),o.a.createElement("button",{onClick:function(){return t.visualizeWalls(2)}}," ","Vertical Maze"," "),o.a.createElement("button",{onClick:function(){return t.visualizeWalls(3)}}," ","Horizontal Maze"," "),o.a.createElement("button",{onClick:function(){return t.clearGrid()}},"Clear Board"),o.a.createElement("button",{onClick:function(){return t.clearPath(n)}},"Clear Path")),o.a.createElement("button",{id:"info-button",className:"info-button",onClick:function(){return t.openHelpMenu()}}," ","?"," ")),o.a.createElement("div",{id:"helpMenu",className:"modal"},o.a.createElement("div",{className:"modal-container"},o.a.createElement("span",{id:"close",className:"close"},"\xd7"),o.a.createElement("div",{className:"buttons-container"},o.a.createElement("div",{className:"info-buttons"},o.a.createElement("button",{id:"Prev",onClick:function(){return t.changeText(-1)}}," ","Prev"," "),o.a.createElement("button",{id:"Next",onClick:function(){return t.changeText(1)}}," ","Next"," ")))),o.a.createElement("div",{id:"helpMenu-content",className:"modal-content"})),o.a.createElement("div",{id:"algo-modal",className:"algo-modal"},o.a.createElement("span",{id:"algo-close",className:"algo-close"},"\xd7"),o.a.createElement("div",{id:"algo-modal-content",className:"algo-modal-content"})),o.a.createElement("div",{className:"container"},o.a.createElement("div",{className:"algo-btn-group"},o.a.createElement("button",{onClick:function(){return t.openAlgorithmMenu(0)}},"   ","\u24d8","   "),o.a.createElement("button",{onClick:function(){return t.openAlgorithmMenu(1)}},"   ","\u24d8","   "),o.a.createElement("button",{onClick:function(){return t.openAlgorithmMenu(2)}},"   ","\u24d8","   "),o.a.createElement("button",{onClick:function(){return t.openAlgorithmMenu(3)}},"   ","\u24d8","   "),o.a.createElement("button",{onClick:function(){return t.openAlgorithmMenu(4)}},"   ","\u24d8","   "),o.a.createElement("button",{onClick:function(){return t.openAlgorithmMenu(5)}}," ","\u24d8"," ")),o.a.createElement("div",{className:"btn-group"},o.a.createElement("button",{onClick:function(){return t.visualizeAlgorithm(0)}},"Dijkstra's Algorithm"),o.a.createElement("button",{onClick:function(){return t.visualizeAlgorithm(1)}},"Breadth First Search"),o.a.createElement("button",{onClick:function(){return t.visualizeAlgorithm(2)}},"Depth First Search"),o.a.createElement("button",{onClick:function(){return t.visualizeAlgorithm(3)}},"A*"),o.a.createElement("button",{onClick:function(){return t.visualizeAlgorithm(4)}},"Greedy Best First Search"),o.a.createElement("button",{onClick:function(){return t.visualizeAlgorithm(5)}},"BiDirectional BFS")),o.a.createElement("div",{className:"grid",id:"grid"},n.map((function(e,n){return o.a.createElement("div",{key:n},e.map((function(e,n){var i=e.row,r=e.col,l=e.isFinish,s=e.isStart,c=e.isWall;return o.a.createElement(m,{key:n,col:r,isFinish:l,isStart:s,isWall:c,mouseIsPressed:a,onMouseDown:function(e,n){return t.handleMouseDown(e,n)},onMouseEnter:function(e,n){return t.handleMouseEnter(e,n)},onMouseUp:function(){return t.handleMouseUp()},row:i})})))})))))}},{key:"visualizeWalls",value:function(t){if(this.clearGrid(),!$){$=!0;var e=tt(),n=e[q][V],a=e[Z][U],i=null;switch(t){case 0:i=function(t,e,n){if(!e||!n||e===n)return!1;var a=[],i=!0,r=!1,o=void 0;try{for(var l,s=t[Symbol.iterator]();!(i=(l=s.next()).done);i=!0){var c=l.value,u=!0,h=!1,d=void 0;try{for(var f,m=c[Symbol.iterator]();!(u=(f=m.next()).done);u=!0){var p=f.value;D(0,100)<50&&D(0,4)<2&&(p.isStart||p.isFinish||(a.push(p),p.isWall=!0))}}catch(g){h=!0,d=g}finally{try{u||null==m.return||m.return()}finally{if(h)throw d}}}}catch(g){r=!0,o=g}finally{try{i||null==s.return||s.return()}finally{if(r)throw o}}return a}(e,n,a);break;case 1:console.log(e),i=G(e,1,18,1,48,"HORIZONTAL","regularMaze"),console.log(e);break;case 2:i=G(e,1,18,1,48,"VERTICAL","verticalMaze");break;case 3:i=G(e,1,18,1,48,"HORIZONTAL","horizontalMaze");break;default:$=!1}null!==i&&this.animateWalls(i,e)}}},{key:"animateWalls",value:function(t,e){for(var n=this,a=function(a){setTimeout((function(){var i=t[a];"undefined"!==typeof i&&(i.isStart||i.isFinish||!i.isWall||(document.getElementById("node-".concat(i.row,"-").concat(i.col)).className="node node-wall")),a===t.length-1&&($=!1,n.setState({grid:e}))}),10*a)},i=0;i<=t.length;i++)a(i)}},{key:"clearGrid",value:function(){if(!$){var t=tt();return this.setState({grid:t}),t}}},{key:"clearPath",value:function(t){if(!$){var e=function(t){for(var e=[],n=0;n<20;n++){for(var a=[],i=0;i<50;i++){var r=Q(i,n);t[n][i].isWall&&(r.isWall=!0),r.isWall?document.getElementById("node-".concat(r.row,"-").concat(r.col)).className="node node-wall":r.isFinish||r.isStart?r.isFinish?document.getElementById("node-".concat(r.row,"-").concat(r.col)).className="node node-finish":r.isStart&&(document.getElementById("node-".concat(r.row,"-").concat(r.col)).className="node node-start"):document.getElementById("node-".concat(r.row,"-").concat(r.col)).className="node",a.push(r)}e.push(a)}return e}(t);this.setState({grid:e})}}},{key:"refreshPage",value:function(){window.location.reload()}},{key:"openHelpMenu",value:function(){var t=document.getElementById("helpMenu");t.style.display="block";var e=document.getElementById("info-button"),n=document.getElementsByClassName("close")[0];console.log(t,e,n),n.onclick=function(){t.style.display="none"},window.onclick=function(e){e.target===t&&(t.style.display="none")},this.changeText(1)}},{key:"changeText",value:function(t){switch(1===t?5===_?_=5:_+=t:1===_?_=1:_+=t,_){case 1:document.getElementById("helpMenu-content").innerHTML=this.HTMLHelper(5)+'<h2 style= "margin-top: -0.3em;"> Welcome to the Pathfinding Visualizer!</h2>\n            <p> This pathfinding application involves multiple path finding algorithms from the most famous ones i.e. Dijkstra to a basic search algorithm such as Breadth First Search. \n            Pathfinding algorithms normally compute the shortest path to take from one point to another. It is a fundamental component used in a myriad of applications e.g. Google maps, line following robots and much more. \n            You are also able to generate mazes to test the different algorithms. </p>\n            <p> Click on <strong>Next</strong> to continue the tutorial. Otherwise click anywhere outside the box, or the <strong>X</strong> button to play around with the application.</p>\n            <p><img style="display: block; margin-left: auto; margin-right: auto; margin-top: 0px;" src="https://i.imgur.com/OkhlgCs.png" alt="" width="245" height="235" /></p>';break;case 2:document.getElementById("helpMenu-content").innerHTML=this.HTMLHelper(5)+'<h2 style= "margin-top: -0.3em;">Motivation</h2>\n            <p> My motivation for this project stems from observing the beauty and intricacy of algorithms,  \n             with only the fundamentals of Computer Science, I had to delve deeper to understand much more. As humans we are <strong>lazy</strong>\n             so what better way to learn than to build and create something captivating and visually pleasing to understand more about these algorithms. \n             I hope this application allows you to understand how each algorithm works.</p>\n            <p><img style="display: block; margin-left: auto; margin-right: auto; margin-top: 50px;" src="https://i.imgur.com/5L2AhLI.png" alt="" width="129" height="129" /></p>';break;case 3:document.getElementById("helpMenu-content").innerHTML=this.HTMLHelper(5)+'<h2 style= "margin-top: -0.3em;"> Where to Start? </h2>\n            <p style = "line-height: 1.15em;"> Simply left-click your mouse and hover anywhere on the grid to generate walls. \n                To auto-generate mazes you have a few selections of which type of mazes you\'d like.Proceed to click any of the algorithms \n                afterwards then magically observe the characteristics of each pathfinding algorithm. You can drag the start and\n                finish node to any place you desire on the grid. You can clear the grid or clear the path of each algorithm after observing. </p>\n                \n            <table style="height: 108px; width: 190; margin-left: auto; margin-right: auto;">\n            <tbody>\n            <tr style="height: 33.8px;">\n            <td style="width: 65px; height: 33.8px; text-align: center;"><img src="https://i.imgur.com/IHB0b8r.png" alt="" width="32" height="35" /></td>\n            <td style="width: 116px; height: 30px; text-align: left;">= Start Node</td>\n            </tr>\n            <tr style="height: 17px;">\n            <td style="width: 65px; height: 17px; text-align: center;"><img src="https://i.pinimg.com/originals/ba/3f/f2/ba3ff2209d0c43655116b31f8e2bbd65.png" alt="" width="35" height="40" /></td>\n            <td style="width: 116px; height: 17px; text-align: left;">= Finish Node</td>\n            </tr>\n            </tbody>\n            </table>\n            <p>&nbsp;</p>\n            ';break;case 4:document.getElementById("helpMenu-content").innerHTML=this.HTMLHelper(5)+'<h2 style= "margin-top: -0.3em;"> Algorithm Information </h2>\n              <table>\n              <tbody>\n              <tr>\n              <td><img src="https://i.imgur.com/fnhxgNj.jpg" alt="" width="59" height="60" /></td>\n              <td>\n              <p style="text-align: left; padding-left: 10px">Click on this icon beside any pathfinding algorithm to view details about&nbsp;\n                how to use the algorithm and detailed commented code about how the algorithm works.\n                Feel free to go to my Github repository on the next page to see how they are implemented.</p>\n              </td>\n              </tr>\n              </tbody>\n              </table>\n            ';break;case 5:document.getElementById("helpMenu-content").innerHTML=this.HTMLHelper(5)+'<h2 style= "margin-top: -0.3em;">Before You Start</h2>\n              <p> I hope you\'ll have fun fiddling with this application, for further questions or feedback, please do not hesitate to contact me.\n              The code can be found on my Github repository at <a href = "https://github.com/JamaicanFriedChicken/path-finding-visualizer" target="_blank">path-finding-visualizer</a> </p>          \n              <p><strong>Note: if your screen is small and the proportions of the maze seem wrong, use CTRL \u2013 to zoom out</strong></p>  \n              <table style="height: 227px; margin-left: auto; margin-right: auto; width: 552px;">\n              <tbody>\n              <tr>\n              <td style="width: 199px;"><img style="display: block; margin-left: auto; margin-right: auto; margin-top: auto;" src="https://i.imgur.com/DdzVMbd.png" alt="" width="152" height="152" /></td>\n              </tr>\n              </tbody>\n              </table>\n            '}var e=document.getElementById("Prev"),n=document.getElementById("Next");1===_?(e.style.backgroundColor="lightgrey",e.disabled=!0):5===_?(n.disabled=!0,n.style.backgroundColor="lightgrey"):(console.log("reached here"),e.disabled=!1,e.style.backgroundColor="hsl(214, 100%, 70%)",n.disabled=!1,n.style.backgroundColor="hsl(214, 100%, 70%)")}},{key:"HTMLHelper",value:function(t){return"<p> "+_+"/"+t+"<p>\n      "}},{key:"openAlgorithmMenu",value:function(t){var e=document.getElementById("algo-modal");e.style.display="block",document.getElementById("algo-modal-content").scrollTop=0,document.getElementsByClassName("algo-close")[0].onclick=function(){e.style.display="none"},window.onclick=function(t){t.target===e&&(e.style.display="none")},document.getElementById("algo-modal-content").innerHTML=function(t){switch(t){case 0:return'<p style="text-align: center;"><strong>Dijkstra\'s Algorithm</strong></p>\n        <p style="text-align: left;"><span style="text-decoration: underline;">How it works</span>:</p>\n        <p style="text-align: left; padding-left: 30px;">Dijkstra\'s algorithm guarantees the shortest path. It is a greedy algorithm that explores unvisited nodes that have the smallest distance from the starting node. The distance/edge weight from one neighbouring node to another is 1. A limitation of Dijkstra\'s algorithm is that the edge weights have to have a non-negative value.&nbsp;</p>\n        <p style="text-align: left;"><span style="text-decoration: underline;">Implementation</span>:</p>\n        <p style="text-align: left;"><img style="display: block; margin-left: auto; margin-right: auto; margin-top: -83px" src="https://i.imgur.com/ILm2p0V.png" alt="" width="1370" height="1417" /></p>\n        ';case 1:return'<p style="text-align: center;"><strong>Breadth-First Search Algorithm</strong></p>\n        <p style="text-align: left;"><span style="text-decoration: underline;">How it works</span>:</p>\n        <p style="text-align: left; padding-left: 30px;">The Breadth-First Search algorithm guarantees the shortest path. It explores all nodes by layers, or in other words, exploring all the neighbouring nodes at a certain level before moving to the next-level neighbour nodes.&nbsp;</p>\n        <p style="text-align: left;"><span style="text-decoration: underline;">Implementation</span>:&nbsp;<br /><img style="display: block; margin-left: auto; margin-right: auto; margin-top: -85px" src="https://i.imgur.com/ZkmUeoU.png" alt="" width="1070" height="1190" /></p>\n        ';case 2:return'<p style="text-align: center;"><strong>Depth-First Search Algorithm</strong></p>\n        <p style="text-align: left;"><span style="text-decoration: underline;">How it works</span>:</p>\n        <p style="text-align: left; padding-left: 30px;">The Depth-First Search algorithm does not guarantee the shortest path. Depth-First search traverses a maze as deep as far as possible and then comes back to a node to repeat the whole process of going as deep as possible again.&nbsp;</p>\n        <p style="text-align: left;"><span style="text-decoration: underline;">Implementation</span>:&nbsp;</p>\n        <p style="text-align: left;"><br /><img style="display: block; margin-left: auto; margin-right: auto; margin-top: -137px" src="https://i.imgur.com/eGSub6I.png" alt="" width="1090" height="1250" /></p>\n        ';case 3:return'<p style="text-align: center;"><strong>A* Algorithm</strong></p>\n        <p style="text-align: left;"><span style="text-decoration: underline;">How it works</span>:</p>\n        <p line-height = "1.2em" style="text-align: left; padding-left: 30px;">The A* algorithm guarantees the shortest path. The algorithm is similar to Dijkstra\'s algorithm and Breadth-First Search, but A* differs by using heuristics to essentially plan ahead at each step so a more optimal decision is made. The algorithm uses a function f(n) = g(n) + h(n), where f(n) is the total estimated cost of the path through node n, which we will be using to compare and order nodes in the priority queue. g(n) is the exact cost from the start node to n. h(n) is the heuristic part, it is the estimated cost from n to the finish node. Calculating h(n) can be done using Manhattan, Euclidean, or Diagonal distance. We will be using the Manhattan distance. One neat fact about A* is that if h(n) = 0, A* becomes Dijkstra\'s algorithms.&nbsp;&nbsp;</p>\n        <p style="text-align: left;"><span style="text-decoration: underline;">Implementation</span>:&nbsp;</p>\n        <p style="text-align: left;"><img style="display: block; margin-left: auto; margin-right: auto; margin-top: -97px" src="https://i.imgur.com/J1xk90R.png" alt="" width="1200" height="1470" /><br /><br /></p>\n        ';case 4:return'<p style="text-align: center;"><strong>Greedy Best-First Search Algorithm</strong></p>\n        <p style="text-align: left;"><span style="text-decoration: underline;">How it works</span>:</p>\n        <p style="text-align: left; padding-left: 30px;">Greedy Best-First Search Algorithm does not guarantee the shortest path. It is similar to A*, but the only difference is that f(n) = h(n), so the algorithm evaluates nodes by using only the heuristic function as a guide towards the finish node.&nbsp;</p>\n        <p style="text-align: left;"><span style="text-decoration: underline;">Implementation</span>:&nbsp;</p>\n        <p style="text-align: left;"><img style="display: block; margin-left: auto; margin-right: auto; margin-top: -95px" src="https://i.imgur.com/H2k10Nc.png" alt="" width="1080" height="1624" /><br /><br /></p>\n        ';case 5:return'<p style="text-align: center;"><strong>Bidirectional Breadth-First Search Algorithm</strong></p>\n        <p style="text-align: left;"><span style="text-decoration: underline;">How it works</span>:</p>\n        <p style="text-align: left; padding-left: 30px;">Bidirectional Breadth-First Search Algorithm guarantees the shortest path. It performs Breadth-First Search on both the start and finish nodes and terminates when the two searches intersect with one another.&nbsp;</p>\n        <p style="text-align: left;"><span style="text-decoration: underline;">Implementation</span>:&nbsp;</p>\n        <p style="text-align: left;"><img style="display: block; margin-left: auto; margin-right: auto; margin-top: -90px" src="https://i.imgur.com/buofADW.png" width="1080" height="1700" /><br /><br /></p>';default:return"<p>Sorry, an unexpected error occured, please refresh</p>"}}(t)}}]),e}(r.Component);function Q(t,e){return{col:t,row:e,isStart:e===q&&t===V,isFinish:e===Z&&t===U,distance:1/0,isVisited:!1,isWall:!1,previousNode:null}}function tt(){for(var t=[],e=0;e<20;e++){for(var n=[],a=0;a<50;a++){var i=Q(a,e);i.isWall=!1,i.isFinish||i.isStart?i.isFinish?document.getElementById("node-".concat(i.row,"-").concat(i.col)).className="node node-finish":i.isStart&&(document.getElementById("node-".concat(i.row,"-").concat(i.col)).className="node node-start"):document.getElementById("node-".concat(i.row,"-").concat(i.col)).className="node",n.push(i)}t.push(n)}return t}var et=function(){return o.a.createElement("div",{className:"App"},o.a.createElement(K,null))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));s.a.render(o.a.createElement(et,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(t){t.unregister()}))}],[[10,1,2]]]);
//# sourceMappingURL=main.d9e5d83c.chunk.js.map